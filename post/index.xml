<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on weotr</title><link>https://weotr.github.io/post/</link><description>Recent content in Posts on weotr</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 13 Jun 2022 14:50:32 +0800</lastBuildDate><atom:link href="https://weotr.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>git基础操作</title><link>https://weotr.github.io/p/git%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link><pubDate>Mon, 13 Jun 2022 14:50:32 +0800</pubDate><guid>https://weotr.github.io/p/git%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid><description>常用操作 本地修改后添加、提交、推送 git add . git commit -m 'xxx' git push (git push --set-upstream origin main仅第一次)
切换账户 git config user.name git config user.email git config --global user.name &amp;quot;your_username git config user.email &amp;quot;your_email&amp;quot;
仓库迁移(迁移一个分支到新仓库) 查看当前远程仓库 git remote -v 先保证本地代码是最新代码 $ git pull -r 修改远程仓库地址 $ git remote set-url origin https://github.com/xxx/box.git 推送代码到新仓库 $ git push -u origin master
迁移全部代码,即所有分支及tag 克隆一个完整的项目到本地(包含所有分支及tag) $ git clone --mirror https://github.com/xxx/box.git 修改远程仓库地址 $ git remote set-url origin https://gitlab.com/qyf404/box.git 推送本地所有代码到远程 $ git push --mirror</description></item><item><title>hugo+obsidian</title><link>https://weotr.github.io/p/hugo-obsidian/</link><pubDate>Mon, 13 Jun 2022 07:05:41 +0800</pubDate><guid>https://weotr.github.io/p/hugo-obsidian/</guid><description>Hugo 博客写作最佳实践 | 胡说 (zhangyingwei.com) Quickadd插件. obsidian git插件，commit，push，结合github actions or vercel 自动部署 crtl+p git commit git push
obsidian操作 ![[xxx.png|400]] 可调整插入图片大小</description></item><item><title>Win10故障处理memo</title><link>https://weotr.github.io/p/win10%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86memo/</link><pubDate>Thu, 02 Jun 2022 17:11:34 +0800</pubDate><guid>https://weotr.github.io/p/win10%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86memo/</guid><description>sc config i8042prt start= disabled/auto禁用/开启笔记本键盘，重启生效
Materials Studios相关 键盘输入时页面卡死&amp;ndash;&amp;gt;微软拼音打开兼容性设置</description></item><item><title>Latex速查表</title><link>https://weotr.github.io/p/latex%E9%80%9F%E6%9F%A5%E8%A1%A8/</link><pubDate>Sun, 29 May 2022 14:40:08 +0800</pubDate><guid>https://weotr.github.io/p/latex%E9%80%9F%E6%9F%A5%E8%A1%A8/</guid><description>{{/&amp;lt;/iframe url=&amp;quot;https://www.mubucm.com/doc/3Kc51UteuBF&amp;quot;&amp;gt;}}
Latex速查表-幕布</description></item><item><title>Markdown语法</title><link>https://weotr.github.io/p/markdown%E8%AF%AD%E6%B3%95/</link><pubDate>Tue, 17 May 2022 19:46:18 +0800</pubDate><guid>https://weotr.github.io/p/markdown%E8%AF%AD%E6%B3%95/</guid><description>直接看这篇教程，下边是我自己用vscode写markdown文件的一些留意事项
markdown基本使用(vscode) 配合插件（vscode） Markdown Preview Enhanced Markdown TOC Excel to Markdown Paste Image 插入图片 使用paste image插件直接复制黏贴（不推荐） 这种方法插入的图片不能直接黏贴到博客页上，最好使用下面base64码转换的方法，可以任意复制黏贴全文 webp用格式工厂转换下（base64码好长一段，虽然能收起来，非必要不用） 把图片转换成base64代码 代码太长vscode中可使用折叠方案，用标签&amp;lt;!-- #region --&amp;gt;图片地址&amp;lt;!-- #endregion --&amp;gt;
禅模式 更注重sematics 我要抄单词啦 crtl+i斜体；crtl+b加粗加黑
公式 $$ 学一下Latex公式的使用 $$
表格 电磁学 理论力学 量子力学 12 13 14 合格 良好 优秀 电磁学 理论力学 量子力学 12 13 14 合格 良好 优秀 （这里不知道为什么用Preview content渲染出的表格没有边框线qwq,hexo渲染raw部分没有对齐）</description></item><item><title>Hugo备忘录</title><link>https://weotr.github.io/p/hugo%E5%A4%87%E5%BF%98%E5%BD%95/</link><pubDate>Tue, 17 May 2022 19:37:00 +0800</pubDate><guid>https://weotr.github.io/p/hugo%E5%A4%87%E5%BF%98%E5%BD%95/</guid><description>常用命令 hugo new site &amp;quot;$mysite&amp;quot;创建新站点
hugo version查看版本
hugo env版本和环境详细信息
hugo new post/index.md创建文章
hugo编译生成静态文件,Hugo将编译所有文件并输出到public目录
hugo server编译生成静态文件并启动web服务
hugo+github手动推送流程 hugo生成静态文件，将public文件夹下内容复制到本地xxx.github.io文件夹下
进入xxx.github.io文件夹下
git add .提交全部内容到xxx.github.io文件夹下(注意空格)
git commit -m '提交信息(必填)'
git push
iframe+obsidian在hugo中插入幕布 hugo不支持iframe嵌入，需要使用shortcode方式设置： [参考](https://github.com/ericswpark/hugo-iframe）
{{/&amp;lt;/iframe url=&amp;quot;https://music.163.com/outchain/player?type=2&amp;amp;id=25638827&amp;amp;auto=1&amp;amp;height=66&amp;quot;&amp;gt;}}(前面两处斜杠防止被渲染)
使用obsidian中convert url to iframe插件：Alt+I快捷键到网址上
hugo脚本 $bash deploy.sh</description></item><item><title>Hexo基础</title><link>https://weotr.github.io/p/hexo%E5%9F%BA%E7%A1%80/</link><pubDate>Tue, 19 Apr 2022 13:33:08 +0800</pubDate><guid>https://weotr.github.io/p/hexo%E5%9F%BA%E7%A1%80/</guid><description>· 相关工具 1、安装node.js 2、安装npm 3、安装git 4、检测安装成功 打开cmd命令行，分别执行，
npm -v
git --version 如果出现版本信息就安装成功
5、安装hexo 打开cmd，执行
npm install hexo-cli -g
等待安装完成，输入 hexo -v 出现版本号则安装成功
· 配置远程仓库 1、注册github账户，add a new repository 格式为&amp;quot;用户名.github.io&amp;rdquo;，此地址即为网站域名 pulic类型
创建之后，点setting设置远程库，找到Github Pages 点击Automatic page generator
2、本地生成ssh并与仓库绑定 $ cd ~/.ssh #查看本机已存在的ssh 如果没有， ssh-keygen -t rsa -C ''邮件地址'' 3次回车， 生成一个ssh公钥，找到.ssh文件夹，记事本打开复制.pub文件内容 github-&amp;gt;设置-&amp;gt;ssh-&amp;gt;将公钥内容复制到key，title随便，保存 测试是否成功 $ ssh -T git@github.com #邮件地址不用改 输入yes，出现'&amp;lsquo;hi ***,You're successfully~'&amp;lsquo;则配置成功
配置 $ git config --global user.name ''github用户名''
$ git config --global user.email ''邮箱''</description></item></channel></rss>